#ifndef DELAY_H_
#define DELAY_H_

#include 	<asm/arch/vic.h>
//#include 	"../include/timer.h"

//=====================================================================
//			=============================================
//							   延时函数
//			=============================================
//=====================================================================

#define delay_20ns()	__asm("NOP")

//=====================================================================
//			=============================================
//						使用定时器制作精确延时函数
//			=============================================
//=====================================================================

//**********************************************
//		Function	：	timer_delay_s
//		Parameter	：	ch（通道号）
//						dly（延时秒数）
//		Description	：	秒延时
//**********************************************
#define timer_delay_s(ch,dly)			\
do{										\
	*(RP)TxLCR(ch)=dly*50000000-20;		\
	*(RP)TxCR(ch)=0x0000001a;			\
	*(RP)TxCR(ch)|=0x01;				\
	while((*(RP)TIMER_TISR&0x01)==0);	\
}while(0)
//**********************************************
//		Function	：	timer_delay_ms
//		Parameter	：	ch（通道号）
//						dly（延时毫秒数）
//		Description	：	毫秒延时
//**********************************************
#define timer_delay_ms(ch,dly)			\
do{										\
	*(RP)TxLCR(ch)=dly*50000-20;		\
	*(RP)TxCR(ch)=0x0000001a;			\
	*(RP)TxCR(ch)|=0x01;				\
	while((*(RP)TIMER_TISR&0x01)==0);	\
}while(0)
//**********************************************
//		Function	：	timer_delay_us
//		Parameter	：	ch（通道号）
//						dly（延时微秒数）
//		Description	：	微秒延时
//**********************************************
#define timer_delay_us(ch,dly)			\
do{										\
	*(RP)TxLCR(ch)=dly*50-20;			\
	*(RP)TxCR(ch)=0x0000001a;			\
	*(RP)TxCR(ch)|=0x01;				\
	while((*(RP)TIMER_TISR&0x01)==0);	\
}while(0)



#endif /*DELAY_H_*/
